# CALCULER LA SOMME D'UN TABLEAU
var array = [2, 5, 1];
array.reduce((a, b) => a + b, 0);

# AUTRE ALTERNATIVE
const traveler = [
    {  description: 'Senior', Amount: 50},
    {  description: 'Senior', Amount: 50},
    {  description: 'Adult', Amount: 75},
    {  description: 'Child', Amount: 35},
    {  description: 'Infant', Amount: 25 },
];
traveler.reduce((a, b) => a + (b['Amount'] || 0), 0);


# CALCULER LA SOMME DES DONNEES EN FONCTION DES UTILISATEURS
var arr = [{ name: 'John', contributions: 2 }, { name: 'Mary', contributions: 4 }, { name: 'John', contributions: 1 }, { name: 'Mary', contributions: 1 }],
result = [];

arr.forEach(function (a) {
    if (!this[a.name]) {
        this[a.name] = { name: a.name, contributions: 0 };
        result.push(this[a.name]);
    }
    this[a.name].contributions += a.contributions;
}, Object.create(null));
console.log(result);




# SUPRIMER LES DOUBLONS D'UN TABLEAU
const listOfTags = [
    { id: 1, label: "Hello", color: "red", sorting: 0 }, 
    { id: 2, label: "World", color: "green", sorting: 1 }, 
    { id: 3, label: "Hello", color: "blue", sorting: 4 }, 
    { id: 4, label: "Sunshine", color: "yellow", sorting: 5 }, 
    { id: 5, label: "Hello", color: "red", sorting: 6 }
],
keys = ['label', 'color'],
filtered = listOfTags.filter(
    (s => o => 
        (k => !s.has(k) && s.add(k))
        (keys.map(k => o[k]).join('|'))
    )
    (new Set)
);

# AUTRE ALTERNATIVE
const arr = [{id: 1, name: 'one'}, {id: 2, name: 'two'}, {id: 1, name: 'one'}]
const ids = arr.map(o => o.id)
const filtered = arr.filter(({id}, index) => !ids.includes(id, index + 1))
